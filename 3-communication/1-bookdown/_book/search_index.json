[
["index.html", "Communities of Opportunity Displacement Risk Assessment Preface", " Communities of Opportunity Displacement Risk Assessment A User Guide Tiernan Martin, Futurewise Fall 2016 Preface This is a work in-progress. "],
["data-methods.html", "A Data Methods ", " A Data Methods "],
["miscellaneous.html", "A.1 Miscellaneous", " A.1 Miscellaneous A.1.1 Seattle Boundary A.1.2 King County Subdivision Boundary A.1.3 Tracts in Seattle CCD In the absence of a straight-forward method for identifying all the census tracts in the Seattle CCD subdivision of King County, it is possible to extract this information from American Factfinder. This tutorial describes how to use the American Factfinder interface to extract a list of all “all tracts within (or partially within) a census place”; substituting “county subdivision” for “place” will retrieve the desired results. A.1.4 Puget Sound Waterbodies These are useful for “clipping” census geographies whose boundaries extend into waterbodies. "],
["census-tracts.html", "A.2 Census Tracts", " A.2 Census Tracts A.2.1 Introduction The primary geographic unit of this assessment is the census tract. As is the case with many communities, the census geographies do not coincide exactly with the formal geographic boundary of the study’s three sites, and should be considered as spatial approximations of these communities. Listed below are the geographic identifiers of the census tracts that approximate each site. TABLE A.1: Census Tract GEOIDs Rainier Valley White Center SeaTac/Tukwilapatial Polygons A.2.2.1 With Waterbodies Left to right: Rainier Valley, White Center, SeaTac/Tukwila #htmlwidget-8a733dc92541a6a1c2f2 {float:left;margin:1px} #htmlwidget-c7d08f84b4eea50887cb {float:left;margin:1px} #htmlwidget-1b207fde179c53dfa142 {float:none;margin:1px} A.2.2.2 Without Waterbodies Left to right: Rainier Valley, White Center, SeaTac/Tukwila #htmlwidget-ea8d3e22d093f245f991 {float:left;margin:1px} #htmlwidget-75d4aa2a18227894eac5 {float:left;margin:1px} #htmlwidget-2732d36c83fff379e1b6 {float:none;margin:1px} "],
["king-county-parcels.html", "A.3 King County Parcels", " A.3 King County Parcels A.3.1 Introduction Tax parcels are the pieces of land associated with property value. King County appraises parcels in order to determine an estimate of the fair market value, which is then used in the process of determening taxation amounts. For the purposes of this assessment, parcels are the geographic unit of the indicator of housing market conditions: residential property value. More information about the parcel dataset is available at the King County GIS Center: KCGIS Center Parcel Shapefile Metadata A.3.2 Parcels in Seattle CCD The entire dataset of King County parcels contains 602,803 records, which makes it challenging to work with because of the file size. The methodology of this project is to compare communities to the Seattle subdivision of King County, so the first step is to extract only the parcels in that geography. The unique identifier for each parcel is called a PIN, and it is a combination of two numeric codes: a six-digit MAJOR (e.g., 092503) and a four-digit MINOR (e.g., 5891). After creating the PIN the PropType variable from the KC assessor’s parcel dataset is joined to the spatial dataset from the KCGIS Center. The spatial dataset’s size is reduced by converting the polygon into points using the rgeos::gCentroid function. sp::over is then used to determine which parcels are overlayed by the Seattle CCD polygon (see this excellent tutorial for more details on sp::over). The subset is exported, retaining its SpatialPointsDataFrame class. # Seattle subdivision of King County, WA (Seattle CCD) sea_ccd &lt;- readOGR(dsn = root_file(&#39;1-data/4-interim/seattle_ccd.gpkg&#39;),layer = &quot;seattle&quot;,verbose = FALSE) %&gt;% spTransform(crs_proj) # Parcels (tabular data only) if(!file.exists(root_file(&#39;1-data/3-external/EXTR_Parcel.csv&#39;))){ url &lt;- &#39;http://aqua.kingcounty.gov/extranet/assessor/Parcel.zip&#39; # direct URL to the file download temp &lt;- tempfile() # create a temporary file to hold the compressed download download(url, dest = temp, mode=&#39;wb&#39;) # download the file unzip (temp, exdir = root_file(&#39;1-data/3-external/&#39;)) # extract the file to the project folder } prcl_all_df &lt;- read_csv(root_file(&#39;1-data/3-external/EXTR_Parcel.csv&#39;),progress = FALSE) %&gt;% mutate(PIN = paste0(Major,Minor)) %&gt;% select(PIN, PropType,CurrentZoning,CurrentUseDesignation) colnames(prcl_all_df) %&lt;&gt;% toupper() # Parcels (sp): 2012 if(!file.exists(root_file(&#39;1-data/3-external/parcel/parcel.shp&#39;))){ url &lt;- &#39;ftp://ftp.kingcounty.gov/gis-web/web/GISData/parcel_SHP.zip&#39; # direct URL to the file download temp &lt;- tempfile() # create a temporary file to hold the compressed download download(url, dest = temp, mode=&#39;wb&#39;) # download the file unzip (temp, exdir = root_file(&#39;1-data/3-external/&#39;)) # extract the file to the project folder } # Load the parcel file # WARNING: large file with long load time # Make the data if(!file.exists(root_file(&#39;1-data/4-interim/prcl-ccd-ptdf-sp.gpkg&#39;))){ prcl_all_sp &lt;- readOGR(dsn = root_file(&#39;1-data/3-external/parcel/&#39;),layer = &#39;parcel&#39;,verbose = FALSE) prcl_all_sp@data %&lt;&gt;% mutate(PIN = as.character(PIN)) # prcl_all_sp %&lt;&gt;% spTransform(crs_proj) # this reprojection is prohibively slow join_df &lt;- prcl_all_sp@data %&gt;% as.data.frame() %&gt;% left_join(.,prcl_all_df, by = &quot;PIN&quot;) # Collect the centroids of all the KC parcels (and transform their CRS to match the project CRS) prcl_all_pt_sp &lt;- prcl_all_sp %&gt;% rgeos::gCentroid(byid = T) %&gt;% spTransform(crs_proj) prcl_all_ptdf_sp &lt;- SpatialPointsDataFrame(prcl_all_pt_sp,join_df,match.ID = FALSE) sea_ccd_poly &lt;- SpatialPolygons(Srl = sea_ccd@polygons,proj4string = crs_proj) # Using the sp::over pts_over &lt;- prcl_all_pt_sp %&gt;% sp::over(sea_ccd_poly) # prcl_ccd_sp &lt;- prcl_all_sp[which(!is.na(pts_over)),] %&gt;% spTransform(crs_proj) # slow prcl_ccd_pt_sp &lt;- prcl_all_pt_sp[which(!is.na(pts_over)),] prcl_ccd_ptdf_sp &lt;- prcl_all_ptdf_sp[which(!is.na(pts_over)),] prcl_ccd_ptdf_sp %&gt;% writeOGR(dsn = root_file(&#39;1-data/4-interim/prcl-ccd-ptdf-sp.gpkg&#39;), layer = &#39;prcl_ccd_ptdf_sp&#39;,driver = &#39;GPKG&#39;, verbose = FALSE, overwrite_layer = TRUE) rm(prcl_all_sp) } # Load the data if(!exists(&#39;prcl_ccd_ptdf_sp&#39;)){ prcl_ccd_ptdf_sp &lt;- readOGR(dsn = root_file(&#39;1-data/4-interim/prcl-ccd-ptdf-sp.gpkg&#39;), layer = &#39;prcl_ccd_ptdf_sp&#39;, verbose = FALSE ) } A.3.3 Assigning Census Tracts to Parcels The sp::over function is used again, but this time to pass the unique identifier from the census tracts (GEOID) to each parcel that it overlay. This method resolves the issue of parcels that are overlayed by multiple tracts because it uses the centroid of the parcel instead of the polygon. Where the centroid is overlayed by two contiguous tract polygon boundaries only the first tract GEOID will be passed on. # Make the data if(!file.exists(root_file(&#39;1-data/4-interim/prcl-ccd-tr-sp.gpkg&#39;))){ # Seattle CCD tracts if(!exists(&#39;tr_ccd_sp&#39;)){ tr_ccd_sp &lt;- readOGR(dsn = root_file(&#39;1-data/4-interim/tr-ccd-sp.gpkg&#39;), layer = &#39;tr_ccd_sp&#39;, verbose = FALSE) } # Trim the data to just the GEOID variable tr_ccd_geoid_sp &lt;- SpatialPolygonsDataFrame(tr_ccd_sp,tr_ccd_sp@data[&#39;GEOID&#39;]) %&gt;% spTransform(crs_proj) # Extract the census tract GEOID using a spatial overlay prcl_ccd_tr_sp &lt;- SpatialPointsDataFrame(prcl_ccd_ptdf_sp@coords, cbind(prcl_ccd_ptdf_sp@data, sp::over(prcl_ccd_ptdf_sp,tr_ccd_geoid_sp))) prcl_ccd_tr_sp@data %&lt;&gt;% mutate(GEOID = as.character(GEOID)) %&gt;% select(GEOID,everything()) writeOGR(obj = prcl_ccd_tr_sp, dsn = root_file(&#39;1-data/4-interim/prcl-ccd-tr-sp.gpkg&#39;), layer = &#39;prcl_ccd_tr_sp&#39;, driver = &#39;GPKG&#39;, verbose = FALSE, overwrite_layer = TRUE) } # Load the data if(!exists(&#39;prcl_ccd_tr_sp&#39;)){ prcl_ccd_tr_sp &lt;- readOGR(dsn = root_file(&#39;1-data/4-interim/prcl-ccd-tr-sp.gpkg&#39;), layer = &#39;prcl_ccd_tr_sp&#39;, verbose = FALSE) } "],
["king-county-residential-property-values.html", "A.4 King County Residential Property Values", " A.4 King County Residential Property Values `r knit_child(res_val_fp)’ "],
["people-of-color-acs.html", "A.5 People of Color (ACS)", " A.5 People of Color (ACS) -->"]
]
